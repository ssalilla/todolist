[{"C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\index.js":"1","C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\Regis\\Regis.js":"2","C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\Login\\Login.js":"3","C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\Todolist\\Todolist.js":"4","C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\Todolist\\Todo.js":"5","C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\Config\\axios.js":"6","C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\Goal\\Goal.js":"7"},{"size":773,"mtime":1608605990500,"results":"8","hashOfConfig":"9"},{"size":2815,"mtime":1608514140150,"results":"10","hashOfConfig":"9"},{"size":1984,"mtime":1608656662413,"results":"11","hashOfConfig":"9"},{"size":3957,"mtime":1608656260364,"results":"12","hashOfConfig":"9"},{"size":2113,"mtime":1608655951386,"results":"13","hashOfConfig":"9"},{"size":103,"mtime":1608605659310,"results":"14","hashOfConfig":"9"},{"size":1146,"mtime":1608788791432,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"17mnukz",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"18"},"C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\index.js",[],["36","37"],"C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\Regis\\Regis.js",["38"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Form, Input, Button, Divider } from \"antd\";\r\nimport ttEdit from \"../Pics/ttEdit.jpg\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst RegistrationForm = () => {\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n\r\n  function Regis() {\r\n    alert(\"Registered!\");\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div class=\"center\">\r\n      {\" \"}\r\n      <img src={ttEdit} alt=\"tt\" width=\"450\" height=\"auto\" />\r\n\r\n      <Divider/>\r\n\r\n      <Form\r\n        {...formItemLayout}\r\n        onFinish={Regis}\r\n        form={form}\r\n        name=\"register\"\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"E-mail\"\r\n          rules={[\r\n            {\r\n              type: \"email\",\r\n              message: \"The input is not valid E-mail!\",\r\n            },\r\n            {\r\n              required: true,\r\n              message: \"Please input your E-mail!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your password!\",\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirm Password\"\r\n          dependencies={[\"password\"]}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please confirm your password!\",\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(rule, value) {\r\n                if (!value || getFieldValue(\"password\") === value) {\r\n                  return Promise.resolve(true);\r\n                }\r\n                return Promise.reject(\r\n                  \"The two passwords that you entered do not match!\"\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button id=\"Regis\" type=\"primary\" htmlType=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\Login\\Login.js",[],"C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\Todolist\\Todolist.js",["39","40","41"],"import React, { useState, useEffect } from \"react\";\r\nimport { List, Row, Col, Divider, Typography } from \"antd\";\r\nimport bg from \"../Pics/bg.jpg\";\r\nimport Crown from \"../Pics/Crown.png\";\r\nimport \"./Todolist.css\";\r\nimport { Button, Progress } from \"semantic-ui-react\";\r\nimport axios from \"../Config/axios\";\r\nimport Todo from \"./Todo\";\r\nimport { BrowserRouter, Route, Link, useHistory } from \"react-router-dom\";\r\n\r\nexport default function Todolist() {\r\n  const [todolist, setTodolist] = useState([]);\r\n  const [inputField, setInputField] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  const { Text, Title } = Typography;\r\n  const history = useHistory();\r\n\r\n  const fetchtodolist = async () => {\r\n    const httpResponse = await axios.get(\"/todolist\");\r\n    setTodolist(httpResponse.data);\r\n    return httpResponse.data;\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchtodolist();\r\n  }, []);\r\n\r\n  const addTodoItem = async () => {\r\n    setInputField(\"\")\r\n    const todoList = await fetchtodolist();\r\n    if (todoList.length >= 5) {\r\n      alert(\"(人◕ω◕) 5 Tasks A Day Is Enough, Rest Some Too.(◕‿◕✿) \");\r\n    } else {\r\n      if (inputField === \"\") {\r\n        return alert(\"Please kindly input your task (◕‿◕✿)\");\r\n      }\r\n      await axios.post(\"/todolist\", { task: inputField });\r\n      fetchtodolist();\r\n    }\r\n  };\r\n\r\n  function Progress1(props) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Progress\r\n          percent={props.progress}\r\n          indicating\r\n          style={{ width: \"80%\", height: \"auto\" }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function isAble(props) {\r\n    if (progress < 100) {\r\n      return alert(\"Please FulFill Your Tasks(ㆁᴗㆁ✿)\");\r\n    }\r\n    history.push(\"/goal\", {todolist})\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"container\" style={{ background: `url(${bg})` }}></div>\r\n\r\n      <Row justify=\"center\">\r\n        <List\r\n          style={{ width: \"450px\", height: \"400px\" }}\r\n          header={\r\n            <div style={{ position: \"relative\", left: \"37%\" }}>\r\n              <Title level={3}>To Do Tasks</Title>\r\n            </div>\r\n          }\r\n          footer={\r\n            <div style={{ position: \"relative\", left: \"22%\" }}>\r\n              <Title level={4}>Five Amazing Things A Day</Title>\r\n            </div>\r\n          }\r\n          bordered\r\n          dataSource={todolist}\r\n          renderItem={(todo) => (\r\n            <List.Item>\r\n              <Row style={{ width: \"100%\" }}>\r\n                <Todo\r\n                  setProgress={setProgress}\r\n                  progress={progress}\r\n                  todo={todo}\r\n                  fetchData={fetchtodolist}\r\n                />\r\n              </Row>\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </Row>\r\n\r\n      <Divider />\r\n\r\n      <Row justify=\"center\">\r\n        <Col>\r\n          <Row>\r\n            <Text mark>Your Daily Tasks:</Text>\r\n          </Row>\r\n          <Row style={{ width: \"100%\" }} justify=\"center\">\r\n            <Col>\r\n              <input\r\n                size=\"50\"\r\n                value={inputField}\r\n                onChange={(e) => setInputField(e.target.value)}\r\n                placeholder=\"Do Everyday.\"\r\n              />\r\n            </Col>\r\n\r\n            <Col>\r\n              <Button\r\n                color=\"teal\"\r\n                type=\"submit\"\r\n                style={{ height: 40, marginTop: -20 }}\r\n                id=\"Add\"\r\n                onClick={addTodoItem}\r\n              >\r\n                Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Divider />\r\n\r\n      <Progress1 progress={progress} />\r\n\r\n      <div class=\"wrapper\">\r\n        <Button onClick={() => isAble()}>\r\n            <img class=\"goal\" src={Crown} alt=\"Goal\" />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\Todolist\\Todo.js",["42"],"import React, { useState } from \"react\";\r\nimport { Row, Col, Input } from \"antd\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport axios from \"../Config/axios\";\r\n\r\nexport default function Todo(props) {\r\n  const [changeInput, setChangeInput] = useState(\"\");\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [isComplete, setIsComplete] = useState(false);\r\n\r\n  const increment = (todo) => {\r\n    props.setProgress((preProg) => preProg + 20);\r\n  };\r\n\r\n  const updateTodoItem = async (id) => {\r\n    await axios.put(`/todolist${id}`, { task: changeInput });\r\n    props.fetchData();\r\n    setIsEdit(false);\r\n  };\r\n\r\n  const toggleEdit = () => {\r\n    setChangeInput(props.todo.task);\r\n    setIsEdit(!isEdit);\r\n  };\r\n\r\n  let contents = (\r\n    <Row style={{ width: \"100%\" }}>\r\n      <Col span={14}>\r\n        <Row justify=\"start\">{props.todo.task}</Row>\r\n      </Col>\r\n\r\n      <Col span=\"4\">\r\n        <Button\r\n          color=\"brown\"\r\n          size=\"mini\"\r\n          disabled={props.todo.isComplete}\r\n          onClick={() => toggleEdit()}\r\n          style={{ height: 40, marginTop: -20 }}\r\n        >\r\n          Edit\r\n        </Button>\r\n      </Col>\r\n\r\n      <Col span={4}>\r\n        <Button\r\n          disabled={isComplete}\r\n          onClick={() => {\r\n            increment(props.todo);\r\n            setIsComplete(true);\r\n          }}\r\n          color=\"green\"\r\n          size=\"Mini\"\r\n          style={{ height: 40, marginTop: -20 }}\r\n        >\r\n          Completed\r\n        </Button>\r\n      </Col>\r\n    </Row>\r\n  );\r\n\r\n  if (isEdit) {\r\n    contents = (\r\n      <Row style={{ width: \"100%\" }}>\r\n        <Col span=\"14\">\r\n          <Input\r\n            value={changeInput}\r\n            onChange={(e) => setChangeInput(e.target.value)}\r\n          />\r\n        </Col>\r\n\r\n        <Col span=\"4\">\r\n          <Button\r\n            color=\"brown\"\r\n            size=\"Mini\"\r\n            onClick={() => toggleEdit()}\r\n            style={{ height: 40, marginTop: -20 }}\r\n          >\r\n            Done\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  return <div style={{ width: \"100%\" }}>{contents}</div>;\r\n}\r\n","C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\Config\\axios.js",[],["43","44"],"C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\Goal\\Goal.js",["45","46"],"import React from \"react\";\r\nimport Success from \"../Pics/Success.jpg\";\r\nimport \"./Goal.css\";\r\nimport { List, Row, Col, Typography, Text } from \"antd\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function Goal() {\r\n  const { Title, Text } = Typography;\r\n  const location = useLocation();\r\n\r\n  return (\r\n\r\n    <div class=\"center\">\r\n      <img src={Success} alt=\"ss\" width=\"350\" height=\"auto\" />\r\n      <List\r\n        style={{ width: \"450px\", height: \"50px\" }}\r\n        header={\r\n          <div style={{ position: \"absolute\", left: \"-8%\" }}>\r\n            <Title level={4}>\r\n              <Text mark>(人◕ω◕) Things You've Achieved Today (◕‿◕✿)</Text>\r\n            </Title>\r\n          </div>\r\n        }\r\n      />\r\n         {location.state && location.state.todolist.map((todo) => (\r\n        <List.Item>\r\n          <div justifyItems=\"center\">\r\n            <Col>{todo.task}</Col>\r\n          </div>\r\n        </List.Item>\r\n      ))}\r\n\r\n      <Button color=\"teal\" htmlType=\"submit\" className=\"logout\">\r\n        <a href=\"/\">Log Out</a>\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":2,"column":8,"nodeType":"53","messageId":"54","endLine":2,"endColumn":16},{"ruleId":"51","severity":1,"message":"55","line":9,"column":10,"nodeType":"53","messageId":"54","endLine":9,"endColumn":23},{"ruleId":"51","severity":1,"message":"56","line":9,"column":25,"nodeType":"53","messageId":"54","endLine":9,"endColumn":30},{"ruleId":"51","severity":1,"message":"57","line":9,"column":32,"nodeType":"53","messageId":"54","endLine":9,"endColumn":36},{"ruleId":"51","severity":1,"message":"58","line":15,"column":9,"nodeType":"53","messageId":"54","endLine":15,"endColumn":23},{"ruleId":"47","replacedBy":"59"},{"ruleId":"49","replacedBy":"60"},{"ruleId":"51","severity":1,"message":"61","line":4,"column":16,"nodeType":"53","messageId":"54","endLine":4,"endColumn":19},{"ruleId":"51","severity":1,"message":"62","line":4,"column":38,"nodeType":"53","messageId":"54","endLine":4,"endColumn":42},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'updateTodoItem' is assigned a value but never used.",["63"],["64"],"'Row' is defined but never used.","'Text' is defined but never used.","no-global-assign","no-unsafe-negation"]