[{"C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\index.js":"1","C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\Regis\\Regis.js":"2","C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\Login\\Login.js":"3","C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\Todolist\\Todolist.js":"4","C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\Todolist\\Todo.js":"5"},{"size":683,"mtime":1608387974318,"results":"6","hashOfConfig":"7"},{"size":2815,"mtime":1608514140150,"results":"8","hashOfConfig":"7"},{"size":1921,"mtime":1608524313634,"results":"9","hashOfConfig":"7"},{"size":3161,"mtime":1608551004308,"results":"10","hashOfConfig":"7"},{"size":1853,"mtime":1608551004308,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"17mnukz",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"14"},"C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\index.js",[],["25","26"],"C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\Regis\\Regis.js",["27"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./index.css\";\r\nimport { Form, Input, Button, Divider } from \"antd\";\r\nimport ttEdit from \"../Pics/ttEdit.jpg\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst RegistrationForm = () => {\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n\r\n  function Regis() {\r\n    alert(\"Registered!\");\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div class=\"center\">\r\n      {\" \"}\r\n      <img src={ttEdit} alt=\"tt\" width=\"450\" height=\"auto\" />\r\n\r\n      <Divider/>\r\n\r\n      <Form\r\n        {...formItemLayout}\r\n        onFinish={Regis}\r\n        form={form}\r\n        name=\"register\"\r\n        scrollToFirstError\r\n      >\r\n        <Form.Item\r\n          name=\"email\"\r\n          label=\"E-mail\"\r\n          rules={[\r\n            {\r\n              type: \"email\",\r\n              message: \"The input is not valid E-mail!\",\r\n            },\r\n            {\r\n              required: true,\r\n              message: \"Please input your E-mail!\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input your password!\",\r\n            },\r\n          ]}\r\n          hasFeedback\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"confirm\"\r\n          label=\"Confirm Password\"\r\n          dependencies={[\"password\"]}\r\n          hasFeedback\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please confirm your password!\",\r\n            },\r\n            ({ getFieldValue }) => ({\r\n              validator(rule, value) {\r\n                if (!value || getFieldValue(\"password\") === value) {\r\n                  return Promise.resolve(true);\r\n                }\r\n                return Promise.reject(\r\n                  \"The two passwords that you entered do not match!\"\r\n                );\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button id=\"Regis\" type=\"primary\" htmlType=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\Login\\Login.js",["28","29","30","31","32","33"],"C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\Todolist\\Todolist.js",["34"],"C:\\Users\\Salilla\\Desktop\\VSCode\\Lilla React Env\\lillareactapp\\src\\Todolist\\Todo.js",["35"],"import React, { useState } from 'react'\r\nimport {  Row, Col, Input} from \"antd\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\n\r\nexport default function Todo(props) {\r\n\r\n    const [changeInput, setChangeInput] = useState(\"\");\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    \r\n    const increment = (todo) => {\r\n    \r\n        const newProgress = props.progress + 20;\r\n        todo.isComplete=true\r\n        props.setProgress(newProgress);\r\n      };\r\n\r\n    const updateTodoItem = async (id) => {\r\n        await axios.put(`http://localhost:8000/todolist${id}`, {task: changeInput});\r\n        props.fetchData();\r\n        setIsEdit(false);\r\n      };\r\n    \r\n    const toggleEdit = () => {\r\n        setChangeInput(props.todo.task);\r\n        setIsEdit(!isEdit)\r\n      }\r\n\r\n      let contents = \r\n\r\n      <Row style={{width: '100%'}}>\r\n      <Col span={14}>\r\n           <Row justify=\"start\">{props.todo.task}</Row>\r\n      </Col>\r\n    \r\n      <Col span=\"4\">\r\n          <Button color=\"brown\" size=\"mini\" disabled={props.todo.isComplete} onClick={() => toggleEdit()}>Edit</Button>\r\n      </Col>\r\n\r\n      <Col span={4}>\r\n          <Button disabled={props.todo.isComplete} onClick={()=>{increment(props.todo)}} color=\"green\" size=\"Mini\">\r\n          Completed\r\n          </Button>\r\n          </Col>\r\n      </Row>\r\n\r\n      if(isEdit) { contents =\r\n          \r\n          <Row style={{width: '100%'}}>\r\n          <Col span=\"14\">\r\n              <Input value={changeInput} onChange={(e)=> setChangeInput(e.target.value)}/>\r\n          </Col>\r\n          \r\n          <Col span=\"4\">\r\n              <Button color=\"brown\" size=\"Mini\" onClick={() => toggleEdit()}>Done</Button>\r\n          </Col>\r\n\r\n      </Row>\r\n      \r\n      }\r\n\r\n    return (\r\n        <div style={{width: '100%'}}>\r\n\r\n        {contents}\r\n\r\n\r\n        <div class=\"wrapper\">\r\n      <button class=\"goal\"><img src={Crown} alt=\"Goal\" Link to=\"./Goal/Goal.js\"/></button></div>\r\n\r\n        </div> \r\n\r\n\r\n\r\n        )\r\n}\r\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":16},{"ruleId":"40","severity":1,"message":"41","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":16},{"ruleId":"40","severity":1,"message":"44","line":9,"column":3,"nodeType":"42","messageId":"43","endLine":9,"endColumn":16},{"ruleId":"40","severity":1,"message":"45","line":9,"column":18,"nodeType":"42","messageId":"43","endLine":9,"endColumn":23},{"ruleId":"40","severity":1,"message":"46","line":9,"column":25,"nodeType":"42","messageId":"43","endLine":9,"endColumn":31},{"ruleId":"40","severity":1,"message":"47","line":9,"column":33,"nodeType":"42","messageId":"43","endLine":9,"endColumn":37},{"ruleId":"40","severity":1,"message":"48","line":9,"column":39,"nodeType":"42","messageId":"43","endLine":9,"endColumn":49},{"ruleId":"40","severity":1,"message":"49","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":9},{"ruleId":"40","severity":1,"message":"50","line":18,"column":11,"nodeType":"42","messageId":"43","endLine":18,"endColumn":25},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'_' is defined but never used.","'updateTodoItem' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]